---
import NavbarMobil from "./NavbarMobil.astro";
import Logo from "./svg/logo.astro";

interface Props {
	isHome?: boolean;
}

const { isHome = false } = Astro.props;
---

<div class="welcome min-h-dvh bg-grafito flex justify-center items-center relative" id="welcome">
	<NavbarMobil floating={true} isHome={isHome} />
	<div class="container">
		<div class="flex justify-center flex-col items-center gap-4 md:gap-16">
			<Logo id="caracter_welcome_logo" />
			<svg width="1050" height="40" fill="none" viewBox="0 0 936 24" class="w-full md:w-auto h-auto" id="real_state">
				<g fill="transparent" stroke="transparent" id="g_1">
					<path d="M0 23.328V1h3.238v22.328H0Z"></path>
					<path d="M73.795 23.328V1h2.568L91.21 19.31h-1.34V.887h3.238v22.329h-2.68L75.581 4.796h1.451v18.42h-3.237v.112Z"></path>
					<path d="M163.666 23.328V1h2.568l10.047 16.858h-1.451L184.766 1h2.568v22.328h-3.014V5.801h.781l-8.82 14.848h-1.451L165.899 5.8h.781v17.527h-3.014Z"
					></path>
					<path
						d="M268.274 23.552c-1.675 0-3.238-.335-4.801-.893a10.603 10.603 0 0 1-3.796-2.457c-1.116-1.004-1.898-2.233-2.456-3.572a11.95 11.95 0 0 1-.893-4.577c0-1.675.335-3.126.893-4.578.558-1.34 1.452-2.567 2.456-3.572 1.117-1.005 2.345-1.787 3.796-2.456a13.125 13.125 0 0 1 4.801-.894c1.674 0 3.237.335 4.689.894a12.033 12.033 0 0 1 3.795 2.344c1.117 1.005 1.898 2.233 2.457 3.573a11.95 11.95 0 0 1 .893 4.577 11.95 11.95 0 0 1-.893 4.577c-.559 1.34-1.452 2.568-2.457 3.573a12.033 12.033 0 0 1-3.795 2.344c-1.452.893-3.015 1.117-4.689 1.117Zm0-2.791a9.1 9.1 0 0 0 3.461-.67c1.004-.447 2.009-1.005 2.791-1.787.781-.781 1.339-1.674 1.786-2.679.446-1.005.67-2.233.67-3.46a9.108 9.108 0 0 0-.67-3.462c-.447-1.004-1.005-2.01-1.786-2.68-.782-.78-1.675-1.339-2.791-1.785-1.005-.447-2.233-.67-3.461-.67-1.228 0-2.456.223-3.461.67-1.005.446-2.01 1.004-2.791 1.786-.782.781-1.452 1.675-1.786 2.68-.447 1.004-.67 2.232-.67 3.46a9.09 9.09 0 0 0 .67 3.461c.446 1.005 1.004 2.01 1.786 2.68.781.78 1.674 1.34 2.791 1.786 1.005.446 2.233.67 3.461.67Z"
					></path>
					<path
						d="M348.879 23.328V1h10.048c2.567 0 4.577.558 5.917 1.563 1.339 1.005 2.121 2.456 2.121 4.242 0 1.228-.223 2.233-.782 3.015-.558.781-1.228 1.451-2.233 1.898-.893.446-1.897.67-3.014.67l.558-1.005c1.228 0 2.456.223 3.35.67 1.004.446 1.786 1.116 2.344 2.01.558.892.893 1.897.893 3.237 0 1.898-.67 3.349-2.121 4.465-1.451 1.005-3.573 1.563-6.364 1.563h-10.717Zm3.237-2.567h7.369c1.786 0 3.126-.335 4.019-.894.893-.558 1.451-1.563 1.451-2.79 0-1.34-.446-2.233-1.451-2.792-.893-.558-2.345-.893-4.019-.893h-7.592v-2.567h6.81c1.675 0 2.903-.335 3.796-.894.893-.558 1.34-1.451 1.34-2.679 0-1.228-.447-2.121-1.34-2.68-.893-.558-2.121-.893-3.796-.893h-6.587v17.082Z"
					></path>
					<path d="M437.075 23.328V1h3.238v22.328h-3.238Z"></path>
					<path d="M510.87 23.328V1h3.238v19.537h12.169v2.791H510.87Z"></path>
					<path d="M593.82 23.328V1h3.237v22.328h-3.237Z"></path>
					<path
						d="M664.265 23.328 674.424 1h3.126l10.16 22.328h-3.349l-9.043-20.542h1.228l-9.043 20.542h-3.238Zm4.242-5.582.894-2.567h12.615l.893 2.567h-14.402Z"
					></path>
					<path
						d="M754.918 23.328V1h8.708c2.009 0 3.684.335 5.024.893 1.339.67 2.456 1.563 3.237 2.68.782 1.116 1.117 2.567 1.117 4.242 0 1.675-.335 3.014-1.117 4.13-.781 1.117-1.786 2.01-3.237 2.68-1.34.67-3.015.893-5.024.893h-6.922l1.451-1.451v8.261h-3.237Zm3.237-7.926-1.451-1.563h6.922c2.009 0 3.572-.447 4.689-1.34 1.004-.893 1.563-2.121 1.563-3.684 0-1.563-.559-2.791-1.563-3.684-1.005-.893-2.568-1.34-4.689-1.34h-6.922l1.451-1.563v13.174Zm11.723 7.926-5.694-8.15h3.461l5.805 8.15h-3.572Z"
					></path>
					<path d="M842.11 23.328V1h3.237v22.328h-3.237Z"></path>
					<path d="M912.555 23.328 922.714 1h3.126L936 23.328h-3.349l-9.043-20.542h1.228l-9.043 20.542h-3.238Zm4.354-5.582.893-2.567h12.616l.893 2.567h-14.402Z"
					></path>
				</g>
			</svg>
		</div>
		<div class="absolute bottom-12 left-8 right-8">
			<div class="container flex justify-between">
				{
					[1, 2, 3, 4].map((i) => (
						<div class:list={["arrow opacity-0", { "hidden md:flex": i > 3 }]} data-index={i}>
							<svg xmlns="http://www.w3.org/2000/svg" width="9" height="10" fill="none" viewBox="0 0 9 10">
								<path stroke="#EBE7DB" stroke-linecap="round" stroke-miterlimit="10" stroke-width="1.74" d="M4.08.566v8.829" />
								<path stroke="#EBE7DB" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.74" d="m.563 4.919 3.524 4.515m3.537-4.515L4.1 9.434" />
							</svg>
						</div>
					))
				}
			</div>
		</div>
	</div>
</div>

<script>
	import anime from "animejs";

	const timeLineWelcome = anime.timeline();

	timeLineWelcome
		.add({
			targets: "#caracter_welcome_logo path",
			keyframes: [
				{
					strokeDashoffset: [anime.setDashoffset, 0],
				},
			],
			easing: "easeInOutSine",
			duration: 1500,
			delay: function (el, i) {
				return i * 200;
			},
			direction: "normal",
			complete: function () {
				anime({
					targets: "#caracter_welcome_logo g#g_1",
					fill: "#EBE8DC",
					duration: 1000,
					easing: "easeInOutQuad",
				});
			},
		})
		.add({
			targets: "#real_state path",
			keyframes: [
				{
					strokeDashoffset: [anime.setDashoffset, 0],
				},
			],
			easing: "easeInOutSine",
			duration: 200,
			delay: function (el, i) {
				return i * 1;
			},
			direction: "normal",
			complete: function () {
				anime({
					targets: "#real_state g#g_1",
					fill: "#EBE8DC",
					duration: 1000,
					easing: "easeInOutQuad",
				});
			},
		})
		.add({
			targets: ".arrow",
			opacity: 1,
			duration: 1000,
			delay: function (el, i) {
				return i * 200;
			},
			easing: "easeInOutQuad",
		});

	anime({
		targets: ".arrow",
		keyframes: [
			{
				translateY: -10,
			},
			{
				translateY: 10,
			},
		],
		duration: 3000,
		direction: "alternate",
		delay: anime.stagger(100),
		easing: "easeInOutExpo",
		loop: true,
	});
</script>
